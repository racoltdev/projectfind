#!/usr/bin/bash

function manageExclusions {
	prepend=" -o -name"
	if [ ${1:0-1} = '/' ]; then
		excludeDirs+="$prepend ${1%?}"
	else
		excludeFiles+="$prepend $1"
	fi
}

function parseFileWith {
	func=$1
	file=$2
	pattern=$3
	while IFS= read -r line; do
		$func "$line" $pattern
	done < $file
}

self=$(basename $0)
# "n" print line number, "I" ignore binary files, "H" force printing file name
grepOpts="-nIH"
partialWord=0
depth=2
# It's easier to set defaults to this so that adding new items doesn't require checking if first exclusion or not
excludeDirs="-wholename /dev/null"
excludeFiles="-wholename /dev/null"

# if number of arguments is 0
if [ $# -eq 0 ]; then
	printf "Missing required arguments\n"
	helpFile=$(dirname $(readlink -f $0))"/help.txt"
	parseFileWith printf $helpFile $self
	exit 1
fi

# while number of arguments is greater than 0
while [ $# -gt 0 ]; do
  case $1 in
	  -d|--depth)
		  depth=$2
		  shift
		  shift
		  ;;
	  -e|--exclude)
		  manageExclusions $2
		  shift
		  shift
		  ;;
	  -r|--exclusionrules)
		  parseFileWith manageExclusions $2
		  shift
		  shift
		  ;;
	  -i|--ignorecase)
		  grepOpts+="i"
		  shift
		  ;;
	  -p|--partial)
		  partialWord=1;
		  shift
		  ;;
	  -E|--extendedregex)
		  grepOpts+="E"
		  shift
		  ;;
	  -h|--help)
		  helpFile=$(dirname $(readlink -f $0))"/help.txt"
		  parseFileWith printf $helpFile $self
		  exit 1
		  ;;
	  -*|--*)
		  echo "Unknown argument $1"
		  exit 1
		  ;;
	  *)
		  #this adds a trailing whitespace. Must be handled later
		  keyphrase+=$1" "
		  shift
		  ;;
  esac
done

#strip trailing whitespace
keyphrase=${keyphrase%?}

depthArgs=". -maxdepth $depth -mindepth 1"
excludeArgs=" -type d ( $excludeDirs ) -prune"
excludeArgs+=" -o -type f ( $excludeFiles ) -prune"

if [ $partialWord = 0 ]; then
	grepOpts+="w"
fi

find $depthArgs $excludeArgs -o -type f -exec grep $grepOpts "$keyphrase" {} +
